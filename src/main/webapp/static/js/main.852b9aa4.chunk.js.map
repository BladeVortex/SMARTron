{"version":3,"sources":["assets/alert.png","assets/smartron-logo.png","components/Exam.js","components/ExamList.js","components/Header.js","components/Home.js","components/ResultsPage/StudentTable.js","components/ResultsPage/QuestionTable.js","components/ResultsPage/StatsTable.js","components/ResultsPage/Tabs.js","components/ResultsPage/Results.js","components/Login.js","components/AnswerKey.js","components/Router.js","components/App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["module","exports","__webpack_require__","p","Exam","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title1","text","problem","exid","scanCode","console","log","navResults","bind","assertThisInitialized","navAnswerKey","history","push","pathname","id","loginName","exams","list","email","react_default","a","createElement","className","src","logo","height","onClick","alert","Component","ExamList","Fragment","children","Header","onClickclassName","Home","exams2","random","newName","newNum","swap","generateCode","handleName","handleNum","sort","_this2","location","length","setState","ex2","concat","fetch","then","response","json","result","examList","forEach","exam","components_Exam","examName","reverse","i","charAt","Math","floor","event","target","value","tmp","_this3","reactjs_popup_es","onClose","onOpen","modal","trigger","close","name","onChange","method","numQuest","components_ExamList","components_Header","rows","responseJson","student","grade","total_points","percent","createData","points","catch","error","withStyles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","classes","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","component","scope","res","question","data","q","frequency","statsJSON","gradeDistribution","stat","TabContainer","_ref","dir","Typography_default","style","padding","data1","COLORS","CenteredTabs","handleChange","_React$createElement","_React$createElement2","_this$props","AppBar_default","position","color","Tabs_default","indicatorColor","textColor","variant","Tab_default","label","lib_default","axis","direction","index","onChangeIndex","dist_default","ResultsPage_StatsTable","es6","strokeDasharray","dataKey","defineProperty","entry","fill","ResultsPage_QuestionTable","ResultsPage_StudentTable","React","backgroundColor","withTheme","Results","paddingLeft","ResultsPage_Tabs","container","document","body","appendChild","Login","responseGoogleSucc","getBasicProfile","getEmail","getName","responseGoogleFail","google_login","clientId","buttonText","onFailure","onSuccess","AnswerKey","answerKeys","keyOptions","chkbox","updateAnswerKey","copyOfAnswerKey","makeCopy","handleClick","handleSubmit","copyAnswerKey","postAnswerKey","keys","item","dupeAnswerKey","JSON","parse","stringify","answerKey","indexOf","updateList","filter","obj","questionId","anserKeyObj","find","e","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","responseText","open","setRequestHeader","send","k","type","defaultChecked","includes","htmlFor","Router","BrowserRouter","basename","process","Route","exact","path","App","components_Router","isLocalhost","Boolean","window","hostname","match","register","config","navigator","URL","href","origin","swUrl","contentType","headers","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.852b9aa4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.a453f81d.png\";","module.exports = __webpack_public_path__ + \"static/media/smartron-logo.613fdbf0.png\";","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport alert from '../assets/alert.png';\nimport '../css/exam.css';\nclass Exam extends Component{\n    constructor(props) {\n        super()\n        this.state = {\n            title1: props.text,\n            problem: props.problem,\n            exid: props.scanCode\n        }\n        console.log(props.problem)\n\n        this.navResults = this.navResults.bind(this);\n        this.navAnswerKey = this.navAnswerKey.bind(this);\n    }\n\n\n\n\n    navResults(){\n        // createBrowserHistory().push(\"/results\");\n        this.props.history.push({pathname:\"/results\",state:{id:this.state.id, text:this.state.title1 ,loginName:this.props.loginName,exams:this.props.list,email:this.props.email}});\n    }\n\n    navAnswerKey(){\n      this.props.history.push({pathname:\"/answerKey\",state:{id:this.state.id,text:this.state.title1, loginName:this.props.loginName,exams:this.props.list,email:this.props.email}});\n    }\n    render() {\n        return(\n            <div>\n                <div className={\"exam\"}>\n                    {this.state.title1}\n                    <a className={\"editName\"}><img src={logo} height={25} /></a>\n                    <button onClick={this.navResults}>View Results</button>\n                    <button onClick={this.navAnswerKey}>Edit Answer Key</button>\n\n                    {this.props.problem ? <img className={\"alert\"} src={alert} height={25} /> : null}\n\n                </div>\n            </div>\n\n        )\n    }\n\n\n}\nexport default Exam;\n","import React, { Component } from 'react';\nimport Exam from \"./Exam\";\n\nclass ExamList extends Component{\n    constructor(props) {\n        super();\n        this.state ={\n            list:props.exams,\n            loginName:props.loginName,\n            email:props.email\n\n        }\n\n    }\n    render() {\n\n\n        return(\n            <>{this.props.children}</>\n\n        )\n    }\n\n}\nexport default ExamList;\n/*\n*       const children =React.children.map(this.props.children,child =>{\n            return React.cloneElement(child,{\n                list:this.state.list,\n                loginName:this.state.loginName,\n                email:this.state.email\n            });\n        });\n* */","import React, {Component} from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\n\nclass Header extends Component{\n    constructor(props) {\n        super(props);\n\n    }\n\n    render(){\n    return(\n      <header className={\"topBar\"}>\n      <h1 className={\"leftA\"}>SMART</h1><h1 className={\"leftB\"}>RON</h1>\n      <h1 className={\"right\"}>{this.props.email} </h1>\n      <img className = \"logout\" onClickclassName={\"logout\"} src={logo} height={40} />\n      </header>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\nimport Exam from \"./Exam\";\nimport ExamList from \"./ExamList\"\nimport Popup from \"reactjs-popup\";\nimport Header from \"./Header\";\n\nclass Home extends Component {\n    //Constructor binds methods and creates an exam list used by the ExamList component\n    constructor(props) {\n        super()\n\n        this.state = {\n            exams:[],\n            exams2:[],\n            random:\"\",\n            newName:\"\",\n            newNum:\"\",\n            swap:false\n        }\n\n        this.generateCode =this.generateCode.bind(this)\n        this.handleName = this.handleName.bind(this)\n        this.handleNum = this.handleNum.bind(this)\n        this.sort = this.sort.bind(this)\n\n    }\n    componentDidMount() {\n        if(this.props.location.state.exams.length>0){\n            this.state.exams = this.props.location.state.exams\n            this.setState(this.state)\n        }else {\n\n            this.setState(this.state)\n            var ex1 = []\n            var ex2 = []\n            const email = this.props.location.state.email\n            console.log(`http://localhost:3000/exam?em=${email}`)\n            fetch(`http://localhost:3000/exam?em=${email}`)\n                .then(response => response.json())\n                .then(result =>{\n                    result.examList.forEach((exam =>\n                            this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName}  list={[]}\n                                                        email={this.props.location.state.email} text={exam.examName} scanCode={exam.scanCode}\n                                                        history={this.props.history}/>)\n\n                    )); this.setState(this.state)\n                })\n            console.log(this.state.exams)\n\n            this.state.exams = ex2\n            this.state.exams2= ex2.reverse()\n                this.setState(this.state)\n        }\n    }\n\n\n\n\n\n    generateCode(){\n        var id = \"\"\n        var poss = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        for (let i = 0; i < 5; i++) {\n            id += poss.charAt(Math.floor(Math.random()*25))\n        }\n        this.state.random = id\n        this.setState(this.state)\n    }\n    handleName(event) {\n        this.setState({newName: event.target.value});\n    }\n    handleNum(event) {\n        this.setState({newNum: event.target.value});\n    }\n    sort(){\n        var tmp = this.state.swap\n        this.state.swap = !tmp\n        this.setState(this.state)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={\"welcome\"}> Welcome, {this.props.location.state.loginName}</h1>\n                <div className={\"buttons\"}>\n                    <Popup  onClose={()=>{this.setState(this.state)}} onOpen={this.generateCode} modal trigger={<button   className={\"scanButton\"}>New Test Scan</button>}>\n                        {close =>\n                            <div className={\"modal\"}>\n\n                                <h1> New Test Scan</h1>\n                                <form>\n                                    <label> Enter name of test: <input name={\"newName\"} value={this.state.newName}\n                                                                       onChange={this.handleName}/></label> <br/>\n                                    <label> Enter number of questions: <input name={\"newNum\"} value={this.state.newNum}\n                                                                              onChange={this.handleNum}/></label>\n                                </form>\n\n                                <Popup onOpen={this.generateCode} modal trigger={<button>Submit</button>}>\n                                    <h1 className={\"id\"}>{this.state.random}</h1>\n                                    <p className={\"scanCode\"}>Scan Code</p>\n                                    <p>\n\n                                        1. Enter this code in the NAME FIELD of the ANSWER KEY scantron <br/>\n\n\n                                        2. Only enter 25 SCANTRONS in the scanner at a time <br/>\n                                        3. Place ANSWER KEY scantron on the TOP of each pile of answer sheets <br/>\n\n                                    </p>\n                                    <button onClick={() => {\n                                        fetch(`http://localhost:3000/exam?email=${this.props.location.state.email}&id=${this.state.random}&name=${this.state.newName}`,{\n                                            method: 'post'\n                                        })\n                                        this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName} email={this.props.location.state.email} list={[]} text={this.state.newName} id={this.state.random} numQuest={this.state.newNum} history={this.props.history}/>); this.setState(this.state)\n                                        close()\n                                    }}>Ok\n                                    </button>\n                                </Popup>\n                            </div>\n                        }\n                    </Popup>\n                    <select className={\"select\"} onChange={this.sort}><option value={\"recent\"}>Most Recent </option> <option value={\"alpha\"}>Alphanumeric</option></select>\n                </div>\n                {this.state.swap ? <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams} history={this.props.history}>{this.state.exams}</ExamList> : <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams} history={this.props.history}>{this.state.exams2}</ExamList>}\n\n                <Header email={this.props.location.state.email}/>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport studentJSON from '../../JSON/Bystudent';\n\nconst styles = theme => ({\n    root: {\n        width: '80%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 500,\n    },\n});\n\nlet id = 0;\nfunction createData(student, grade, total_points, percent) {\n    id += 1;\n    return { student, grade, total_points, percent };\n}\n\nconst rows = [];\n\n// studentJSON.students.forEach((student) => {\n//     rows.push(createData(student.name, student.grade, student.points, student.percent));\n// });\n\n\nfetch('http://localhost:3000/students')\n    .then((response) => response.json())\n    .then((responseJson) => {\n        responseJson.forEach((student) => {\n            rows.push(createData(student.name, student.grade, student.points, student.percent));\n        })\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\nfunction StudentTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Student</TableCell>\n                        <TableCell align=\"center\">Grade</TableCell>\n                        <TableCell align=\"center\">Total Points</TableCell>\n                        <TableCell align=\"center\">Percent %</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.student}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.grade}</TableCell>\n                            <TableCell align=\"center\">{row.total_points}</TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStudentTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StudentTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport questionJSON from '../../JSON/Byquestion';\n\nconst styles = theme => ({\n    root: {\n        width: '40%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createData(response, frequency) {\n    id += 1;\n    return { response, frequency };\n}\n\nconst rows = [];\n\n// questionJSON.questionlist.forEach((question) => {\n//     question.data.forEach((q) => {\n//         rows.push(createData(question.questionNumber, q.name, q.value));\n//     });\n// });\n\nfetch('http://localhost:3000/questions')\n    .then((res) => res.json())\n    .then((responseJson) => {\n        responseJson.forEach((question) => {\n            question.data.forEach((q) => {\n                rows.push(createData(q.response, q.frequency));\n            });\n        });\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\nfunction QuestionTable(props) {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Question Number</TableCell>\n                        <TableCell >1</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell >Response</TableCell>\n                        <TableCell >Frequency</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.response}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.frequency}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nQuestionTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(QuestionTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport statsJSON from '../../JSON/Statistics';\n\nconst styles = theme => ({\n    root: {\n        width: '50%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createData(grade, percent) {\n    id += 1;\n    return { grade, percent };\n}\n\nconst data = [];\n\nstatsJSON.gradeDistribution.forEach((stat) => {\n    data.push(createData(stat.grade, stat.percent));\n});\n\nfunction StatsTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Grade</TableCell>\n                        <TableCell align=\"center\">Percent Score</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.grade}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStatsTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StatsTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { Cell, BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\nimport StudentTable from './StudentTable';\nimport Center from 'react-center';\nimport QuestionTable from \"./QuestionTable\";\nimport statsJSON from '../../JSON/Statistics';\nimport StatsTable from './StatsTable';\n\nfunction TabContainer({ children, dir }) {\n    return (\n        <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n            {children}\n        </Typography>\n    );\n}\n\nconst data = [\n    { \"name\": \"A\", \"value\": 10 },\n    { \"name\": \"B\", \"value\": 20 },\n    { \"name\": \"C\", \"value\": 5 },\n    { \"name\": \"D\", \"value\": 2 },\n    { \"name\": \"E\", \"value\": 1 }\n];\n\nlet id = 0;\nfunction createData(grade, percent) {\n    id += 1;\n    return { grade, percent };\n}\n\nconst data1 = [];\n\nstatsJSON.gradeDistribution.forEach((stat) => {\n    data1.push(createData(stat.grade, stat.percent));\n});\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: '#fff',\n        width: 1000,\n    },\n});\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#E6E6FA'];\n\nclass CenteredTabs extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { classes, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"#fff\">\n                    <Tabs\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"Statistics Report\" />\n                        <Tab label=\"By Question\" />\n                        <Tab label=\"By Student\" />\n                    </Tabs>\n                </AppBar>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={this.state.value}\n                    onChangeIndex={this.handleChange}\n                >\n                    <TabContainer dir={theme.direction}>\n                        <Center><StatsTable /></Center>\n                        <p> </p>\n                        <Center>\n                            <BarChart width={700} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center>\n                            <QuestionTable />\n                            <BarChart width={400} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center><StudentTable /></Center>\n                    </TabContainer>\n                </SwipeableViews>\n            </div>\n        );\n    }\n}\n\nCenteredTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CenteredTabs);\n","import React, { Component } from 'react';\nimport '../../css/App.css';\nimport'../../css/styles.css';\n//import {Link} from \"react-router-dom\";\nimport Tabs from './Tabs';\nimport Center from 'react-center';\nimport Header from \"../Header\";\n\nclass Results extends Component {\n\n    render() {\n        return (\n            <div>\n                <Header email={this.props.location.state.email}/>\n                <h1 style={{ color: '#00ccbc', paddingLeft: '50px' }}>Results</h1>\n                <p style={{ color: '#00ccbc', paddingLeft: '50px' }}>{this.props.location.state.text}</p>\n                <Center><Tabs /></Center>\n            </div>\n\n        );\n    }\n}\n\nconst container = document.createElement('div');\ndocument.body.appendChild(container);\n\nexport default Results;\n\n/*\n        <Link to={'/home'} style={{ textDecoration: 'none', color: '#003C60'}}>&lt;Back to Dashboard</Link>\n* */","import React, { Component } from 'react';\nimport logo from '../assets/smartron-logo.png';\nimport '../css/App.css';\nimport {GoogleLogin} from \"react-google-login\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    responseGoogleSucc = (response) => {\n        console.log(response.getBasicProfile().getEmail())\n        this.props.history.push({pathname:\"/home\", state:{loginName:response.getBasicProfile().getName(), email:response.getBasicProfile().getEmail(),exams:[]}});\n    }\n\n    responseGoogleFail = (response) => {\n        console.log(\"Error Signing in\")\n    }\n\n    render() {\n        return (\n            <div className={\"loginButton\"}>\n                <img src={logo} height={400}/>\n                <p>Welcome to SMARTron, please login with your LakerNet account</p>\n                <GoogleLogin\n                    clientId=\"121480712018-0f6fb2fh7kbms55bno97g3hiju99n8oo.apps.googleusercontent.com\"\n                    buttonText=\"Login with your LakerNet ID\"\n                    onFailure={this.responseGoogleFail}\n                    onSuccess={this.responseGoogleSucc}\n                    className={\"button\"}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport '../css/answerkey.css';\nimport Header from '../components/Header';\nclass AnswerKey extends Component{\nconstructor(){\n  super();\n  this.state = {\n    answerKeys: [],\n    keyOptions: [\"A\", \"B\", \"C\", \"D\", \"E\"],\n    chkbox: false,\n    updateAnswerKey: [],\n    copyOfAnswerKey: [],\n    makeCopy: true,\n    examList:[],\n    loginName:\"\",\n    email:\"\"\n  };\n  this.handleClick = this.handleClick.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.copyAnswerKey = this.copyAnswerKey.bind(this);\n  this.postAnswerKey = this.postAnswerKey.bind(this);\n}\n\ncomponentDidMount(){\n  fetch('http://localhost:8080/SMARTron/smartron/answerkey')\n  .then(response => response.json())\n  .then(result => {\n    const keys = result.map(item => {\n      return item;\n    })\n    this.setState({\n      answerKeys: keys,\n    })\n  });\n}\n\ncopyAnswerKey(){\n  let dupeAnswerKey = JSON.parse(JSON.stringify(this.state.answerKeys));\n  this.setState({\n    makeCopy:false,\n    copyOfAnswerKey:dupeAnswerKey\n  });\n}\n\nhandleClick(item, key){\n  if(this.state.makeCopy){\n    this.copyAnswerKey();\n  }\n  var index = item.answerKey.indexOf(key);\n  item.answerKey = [];\n  item.answerKey.push(key);\n//    if(item.answerKey.includes(key)){\n//      item.answerKey.splice(index,1);\n//    }else{\n//      item.answerKey.push(key);\n//    }\n    console.log();\n  if(this.state.updateAnswerKey.length === 0){\n    this.state.updateAnswerKey.push(item);\n  }\n\n  let updateList = this.state.updateAnswerKey;\n  updateList = updateList.filter(function( obj ){\n  return obj.questionId !== item.questionId});\n\n  let anserKeyObj = this.state.copyOfAnswerKey\n    .find(obj => obj.questionId === item.questionId);\n    item.answerKey.sort();\n\n  if(JSON.stringify(item) !== JSON.stringify(anserKeyObj)){\n    updateList.push(item);\n  }\n  this.setState({\n    updateAnswerKey:updateList\n  });\n}\n\nhandleSubmit(e){\n  this.props.history.push({pathname:\"/home\", state:{loginName:this.props.location.state.loginName, email:this.props.location.state.email,exams:this.props.location.state.exams}});\n  console.log(\"handle on submit here\")\n  console.log(this.state.copyOfAnswerKey);\n  console.log(this.state.updateAnswerKey);\n  this.postAnswerKey();\n}\n\npostAnswerKey(){\nvar data = JSON.stringify(this.state.answerKeys);\nconsole.log(data);\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = false;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === 4) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"http://localhost:8080/SMARTron/smartron/updateAnswerKey\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.send(data);\n}\n\n  render(){\n    return (\n      <div>\n        <div>\n        </div>\n      <div align = \"right\">\n          <h1 className = \"answerKeyTitle\" align = \"center\">Answer Key</h1>\n          <h1 className = \"examName\" align = \"center\">{this.props.location.state.text}</h1>\n            <div className = \"items\">\n              {this.state.answerKeys.map( item => (\n                <div align = \"center\" className ={item.answerKey.length !== 0? \"item\": \"itemEmpty\"}>\n                  <div key ={item.questionId}>\n                    <div className=\"keyBox\">\n                      <span className=\"questionId\">\n                        {item.questionId}\n                      </span>\n                        {this.state.keyOptions.map(k =>(\n                          <span>\n                            <input\n                              type=\"checkbox\"\n                              value={item.questionId}\n                              id ={item.questionId+k}\n                              name=\"\"\n                              defaultChecked={item.answerKey.includes(k) ? true : false}\n                              onClick={() => this.handleClick(item, k)}/>\n                              <label htmlFor={item.questionId+k}>{k}</label>\n                            </span>\n                          ))}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n              <button className= \"float\"\n                     onClick={() => this.handleSubmit()}>Submit</button>\n            </div>\n          <Header email={this.props.location.state.email}/>\n\n      </div>\n\n          );\n        }\n}\nexport default AnswerKey\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from './Home';\nimport Results from \"./ResultsPage/Results\";\nimport Login from \"./Login\";\nimport AnswerKey from \"./AnswerKey\";\n\nclass Router extends Component {\n    render() {\n        return (\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <div style={{ height: \"100%\" }}>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path=\"/home\" component={Home} />\n                    <Route exact path=\"/results\" component={Results} />\n                    <Route exact path=\"/answerKey\" component={AnswerKey}/>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Router;\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Router from '../components/Router'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loginName:\"hey\"\n        }\n    }\n\n\n    render() {\n        return (\n            <Router/>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}