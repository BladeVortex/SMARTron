{"version":3,"sources":["assets/alert.png","assets/smartron-logo.png","components/Exam.js","components/ExamList.js","components/Header.js","components/Home.js","components/ResultsPage/StudentTable.js","components/ResultsPage/QuestionTable.js","components/ResultsPage/StatsTable.js","components/ResultsPage/Tabs.js","components/ResultsPage/Results.js","components/Login.js","components/AnswerKey.js","components/Router.js","components/App.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["module","exports","__webpack_require__","p","Exam","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title1","text","problem","console","log","navResults","bind","assertThisInitialized","navAnswerKey","history","push","pathname","loginName","exams","list","email","react_default","a","createElement","className","src","logo","height","onClick","alert","Component","ExamList","Fragment","children","Header","onClickclassName","Home","exams2","random","newName","newNum","swap","generateCode","handleName","handleNum","sort","_this2","location","length","setState","ex2","examJSON","examList","forEach","exam","components_Exam","examName","scanCode","reverse","id","i","charAt","Math","floor","event","target","value","tmp","_this3","reactjs_popup_es","onClose","onOpen","modal","trigger","close","name","onChange","numQuest","components_ExamList","components_Header","rows","fetch","then","response","json","responseJson","student","grade","total_points","percent","createData","points","catch","error","withStyles","theme","root","width","marginTop","spacing","unit","overflowX","table","minWidth","classes","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","map","row","key","component","scope","question","responseFrequencies","frequency","number","correct","data","statsJSON","gradeDistribution","stat","TabContainer","_ref","dir","Typography_default","style","padding","data1","COLORS","CenteredTabs","handleChange","_React$createElement","_React$createElement2","_this$props","AppBar_default","position","color","Tabs_default","indicatorColor","textColor","variant","Tab_default","label","lib_default","axis","direction","index","onChangeIndex","dist_default","ResultsPage_StatsTable","es6","strokeDasharray","dataKey","defineProperty","entry","concat","fill","ResultsPage_QuestionTable","ResultsPage_StudentTable","React","backgroundColor","withTheme","Results","paddingLeft","ResultsPage_Tabs","container","document","body","appendChild","Login","responseGoogleSucc","getBasicProfile","getEmail","getName","responseGoogleFail","google_login","clientId","buttonText","onFailure","onSuccess","AnswerKey","answerKeys","keyOptions","chkbox","updateAnswerKey","copyOfAnswerKey","makeCopy","handleClick","handleSubmit","copyAnswerKey","postAnswerKey","result","keys","item","dupeAnswerKey","JSON","parse","stringify","answerKey","indexOf","updateList","filter","obj","questionId","anserKeyObj","find","e","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","responseText","open","setRequestHeader","send","k","type","defaultChecked","includes","htmlFor","Router","BrowserRouter","Route","exact","path","App","components_Router","isLocalhost","Boolean","window","hostname","match","register","config","navigator","URL","process","href","origin","swUrl","contentType","headers","get","status","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.d4461cee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.a453f81d.png\";","module.exports = __webpack_public_path__ + \"static/media/smartron-logo.613fdbf0.png\";","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport alert from '../assets/alert.png';\nimport '../css/exam.css';\nclass Exam extends Component{\n    constructor(props) {\n        super()\n        this.state = {\n            title1: props.text,\n            problem: props.problem\n\n        }\n        console.log(props.problem)\n\n        this.navResults = this.navResults.bind(this);\n        this.navAnswerKey = this.navAnswerKey.bind(this);\n    }\n\n\n\n\n    navResults(){\n        // createBrowserHistory().push(\"/results\");\n        this.props.history.push({pathname:\"/results\",state:{text:this.state.title1 ,loginName:this.props.loginName,exams:this.props.list,email:this.props.email}});\n    }\n\n    navAnswerKey(){\n      this.props.history.push({pathname:\"/answerKey\",state:{text:this.state.title1, loginName:this.props.loginName,exams:this.props.list,email:this.props.email}});\n    }\n    render() {\n        return(\n            <div>\n                <div className={\"exam\"}>\n                    {this.state.title1}\n                    <a className={\"editName\"}><img src={logo} height={25} /></a>\n                    <button onClick={this.navResults}>View Results</button>\n                    <button onClick={this.navAnswerKey}>Edit Answer Key</button>\n\n                    {this.props.problem ? <img className={\"alert\"} src={alert} height={25} /> : null}\n\n                </div>\n            </div>\n\n        )\n    }\n\n\n}\nexport default Exam;\n","import React, { Component } from 'react';\nimport Exam from \"./Exam\";\n\nclass ExamList extends Component{\n    constructor(props) {\n        super();\n        this.state ={\n            list:props.exams,\n            loginName:props.loginName,\n            email:props.email\n\n        }\n\n    }\n    render() {\n\n\n        return(\n            <>{this.props.children}</>\n\n        )\n    }\n\n}\nexport default ExamList;\n/*\n*       const children =React.children.map(this.props.children,child =>{\n            return React.cloneElement(child,{\n                list:this.state.list,\n                loginName:this.state.loginName,\n                email:this.state.email\n            });\n        });\n* */","import React, {Component} from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\n\nclass Header extends Component{\n    constructor(props) {\n        super(props);\n\n    }\n\n    render(){\n    return(\n      <header className={\"topBar\"}>\n      <h1 className={\"leftA\"}>SMART</h1><h1 className={\"leftB\"}>RON</h1>\n      <h1 className={\"right\"}>{this.props.email} </h1>\n      <img className = \"logout\" onClickclassName={\"logout\"} src={logo} height={40} />\n      </header>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from 'react';\nimport logo from '../assets/logo.svg';\nimport '../css/App.css';\nimport Exam from \"./Exam\";\nimport ExamList from \"./ExamList\"\nimport examJSON from \"../JSON/Mainpage\"\nimport Popup from \"reactjs-popup\";\nimport Header from \"./Header\";\n\nclass Home extends Component {\n    //Constructor binds methods and creates an exam list used by the ExamList component\n    constructor(props) {\n        super()\n\n        this.state = {\n            exams:[],\n            exams2:[],\n            random:\"\",\n            newName:\"\",\n            newNum:\"\",\n            swap:false\n        }\n\n        this.generateCode =this.generateCode.bind(this)\n        this.handleName = this.handleName.bind(this)\n        this.handleNum = this.handleNum.bind(this)\n        this.sort = this.sort.bind(this)\n\n    }\n    componentDidMount() {\n        if(this.props.location.state.exams.length>0){\n            this.state.exams = this.props.location.state.exams\n            this.setState(this.state)\n        }else {\n\n            this.setState(this.state)\n            var ex1 = []\n            var ex2 = []\n            examJSON.examList.forEach((exam) =>\n                this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName} list={[]}\n                               email={this.props.location.state.email} text={exam.examName} scanCode={exam.scanCode}\n                               history={this.props.history}/>)\n            );\n            this.setState(this.state)\n\n            this.state.exams.forEach((exam) =>\n               ex2.push(<Exam problem={false} loginName={this.props.location.state.loginName} list={[]}\n                              email={this.props.location.state.email} text={exam.props.text} scanCode={exam.props.scanCode}\n                              history={this.props.history}/>)\n\n            );\n\n            this.state.exams = ex2\n            this.state.exams2= ex2.reverse()\n                this.setState(this.state)\n        }\n    }\n\n\n\n\n\n    generateCode(){\n        var id = \"\"\n        var poss = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n        for (let i = 0; i < 5; i++) {\n            id += poss.charAt(Math.floor(Math.random()*25))\n        }\n        console.log(id)\n        this.state.random = id\n        this.setState(this.state)\n    }\n    handleName(event) {\n        this.setState({newName: event.target.value});\n    }\n    handleNum(event) {\n        this.setState({newNum: event.target.value});\n    }\n    sort(){\n        var tmp = this.state.swap\n        this.state.swap = !tmp\n        this.setState(this.state)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className={\"welcome\"}> Welcome, {this.props.location.state.loginName}</h1>\n                <div className={\"buttons\"}>\n                    <Popup  onClose={()=>{this.setState(this.state)}} onOpen={this.generateCode} modal trigger={<button   className={\"scanButton\"}>New Test Scan</button>}>\n                        {close =>\n                            <div className={\"modal\"}>\n\n                                <h1> New Test Scan</h1>\n                                <form>\n                                    <label> Enter name of test: <input name={\"newName\"} value={this.state.newName}\n                                                                       onChange={this.handleName}/></label> <br/>\n                                    <label> Enter number of questions: <input name={\"newNum\"} value={this.state.newNum}\n                                                                              onChange={this.handleNum}/></label>\n                                </form>\n\n                                <Popup onOpen={this.generateCode} modal trigger={<button>Submit</button>}>\n                                    <h1 className={\"id\"}>{this.state.random}</h1>\n                                    <p className={\"scanCode\"}>Scan Code</p>\n                                    <p>\n\n                                        1. Enter this code in the NAME FIELD of the ANSWER KEY scantron <br/>\n\n\n                                        2. Only enter 25 SCANTRONS in the scanner at a time <br/>\n                                        3. Place ANSWER KEY scantron on the TOP of each pile of answer sheets <br/>\n\n                                    </p>\n                                    <button onClick={() => {\n                                        this.state.exams.push(<Exam problem={false} loginName={this.props.location.state.loginName} email={this.props.location.state.email} list={[]} text={this.state.newName} id={this.state.random} numQuest={this.state.newNum} history={this.props.history}/>); this.setState(this.state)\n                                        close()\n                                    }}>Ok\n                                    </button>\n                                </Popup>\n                            </div>\n                        }\n                    </Popup>\n                    <select className={\"select\"} onChange={this.sort}><option value={\"recent\"}>Most Recent </option> <option value={\"alpha\"}>Alphanumeric</option></select>\n                </div>\n                {this.state.swap ? <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams} history={this.props.history}>{this.state.exams}</ExamList> : <ExamList loginName={this.props.location.state.loginName} email={this.props.location.state.email} exams={this.state.exams} history={this.props.history}>{this.state.exams2}</ExamList>}\n\n                <Header email={this.props.location.state.email}/>\n            </div>\n        );\n    }\n\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport studentJSON from '../../JSON/Bystudent';\n\nconst styles = theme => ({\n    root: {\n        width: '80%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 500,\n    },\n});\n\nlet id = 0;\nfunction createData(student, grade, total_points, percent) {\n    id += 1;\n    return { student, grade, total_points, percent };\n}\n\nconst rows = [];\n\n// studentJSON.students.forEach((student) => {\n//     rows.push(createData(student.name, student.grade, student.points, student.percent));\n// });\n\n\nfetch('http://localhost:3000/students')\n    .then((response) => response.json())\n    .then((responseJson) => {\n        responseJson.forEach((student) => {\n            rows.push(createData(student.name, student.grade, student.points, student.percent));\n        })\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\nfunction StudentTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Student</TableCell>\n                        <TableCell align=\"center\">Grade</TableCell>\n                        <TableCell align=\"center\">Total Points</TableCell>\n                        <TableCell align=\"center\">Percent %</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.student}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.grade}</TableCell>\n                            <TableCell align=\"center\">{row.total_points}</TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStudentTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StudentTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport questionJSON from '../../JSON/Byquestion';\n\nconst styles = theme => ({\n    root: {\n        width: '40%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createData(number, correct, response) {\n    id += 1;\n    return { number, correct, response};\n}\n\nconst rows = [];\n\n// questionJSON.questionlist.forEach((question) => {\n//     question.data.forEach((q) => {\n//         rows.push(createData(question.questionNumber, q.name, q.value));\n//     });\n// });\n\nfetch('http://localhost:3000/questions')\n    .then((response) => response.json())\n    .then((responseJson) => {\n        responseJson.forEach((question) => {\n            question.responseFrequencies.forEach((frequency) => {\n                rows.push(createData(question.id, question.correct, frequency.responseFrequencies));\n            })\n        })\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\nfunction QuestionTable(props) {\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell >Question Number</TableCell>\n                        <TableCell >1</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell >Response</TableCell>\n                        <TableCell >Frequency</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.response}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nQuestionTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(QuestionTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport statsJSON from '../../JSON/Statistics';\n\nconst styles = theme => ({\n    root: {\n        width: '50%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 100,\n    },\n});\n\nlet id = 0;\nfunction createData(grade, percent) {\n    id += 1;\n    return { grade, percent };\n}\n\nconst data = [];\n\nstatsJSON.gradeDistribution.forEach((stat) => {\n    data.push(createData(stat.grade, stat.percent));\n});\n\nfunction StatsTable(props) {\n\n    const { classes } = props;\n\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\">Grade</TableCell>\n                        <TableCell align=\"center\">Percent Score</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.grade}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.percent}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n}\n\nStatsTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StatsTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { Cell, BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from \"recharts\";\nimport StudentTable from './StudentTable';\nimport Center from 'react-center';\nimport QuestionTable from \"./QuestionTable\";\nimport statsJSON from '../../JSON/Statistics';\nimport StatsTable from './StatsTable';\n\nfunction TabContainer({ children, dir }) {\n    return (\n        <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n            {children}\n        </Typography>\n    );\n}\n\nconst data = [\n    { \"name\": \"A\", \"value\": 10 },\n    { \"name\": \"B\", \"value\": 20 },\n    { \"name\": \"C\", \"value\": 5 },\n    { \"name\": \"D\", \"value\": 2 },\n    { \"name\": \"E\", \"value\": 1 }\n];\n\nlet id = 0;\nfunction createData(grade, percent) {\n    id += 1;\n    return { grade, percent };\n}\n\nconst data1 = [];\n\nstatsJSON.gradeDistribution.forEach((stat) => {\n    data1.push(createData(stat.grade, stat.percent));\n});\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: '#fff',\n        width: 1000,\n    },\n});\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#E6E6FA'];\n\nclass CenteredTabs extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { classes, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\" color=\"#fff\">\n                    <Tabs\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"Statistics Report\" />\n                        <Tab label=\"By Question\" />\n                        <Tab label=\"By Student\" />\n                    </Tabs>\n                </AppBar>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={this.state.value}\n                    onChangeIndex={this.handleChange}\n                >\n                    <TabContainer dir={theme.direction}>\n                        <Center><StatsTable /></Center>\n                        <p> </p>\n                        <Center>\n                            <BarChart width={700} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center>\n                            <QuestionTable />\n                            <BarChart width={400} height={200} data={data1}>\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis dataKey=\"grade\" />\n                                <YAxis />\n                                <Tooltip />\n                                <Legend />\n                                <Bar data={data1} dataKey=\"grade\" dataKey=\"percent\" fill=\"#000000\">\n                                    {\n                                        data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </Center>\n                    </TabContainer>\n                    <TabContainer dir={theme.direction}>\n                        <Center><StudentTable /></Center>\n                    </TabContainer>\n                </SwipeableViews>\n            </div>\n        );\n    }\n}\n\nCenteredTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CenteredTabs);\n","import React, { Component } from 'react';\nimport '../../css/App.css';\nimport'../../css/styles.css';\n//import {Link} from \"react-router-dom\";\nimport Tabs from './Tabs';\nimport Center from 'react-center';\nimport Header from \"../Header\";\n\nclass Results extends Component {\n\n    render() {\n        return (\n            <div>\n                <Header email={this.props.location.state.email}/>\n                <h1 style={{ color: '#00ccbc', paddingLeft: '50px' }}>Results</h1>\n                <p style={{ color: '#00ccbc', paddingLeft: '50px' }}>{this.props.location.state.text}</p>\n                <Center><Tabs /></Center>\n            </div>\n\n        );\n    }\n}\n\nconst container = document.createElement('div');\ndocument.body.appendChild(container);\n\nexport default Results;\n\n/*\n        <Link to={'/home'} style={{ textDecoration: 'none', color: '#003C60'}}>&lt;Back to Dashboard</Link>\n* */","import React, { Component } from 'react';\nimport logo from '../assets/smartron-logo.png';\nimport '../css/App.css';\nimport {GoogleLogin} from \"react-google-login\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    responseGoogleSucc = (response) => {\n        console.log(response.getBasicProfile().getEmail())\n        this.props.history.push({pathname:\"/home\", state:{loginName:response.getBasicProfile().getName(), email:response.getBasicProfile().getEmail(),exams:[]}});\n    }\n\n    responseGoogleFail = (response) => {\n        console.log(\"Error Signing in\")\n    }\n\n    render() {\n        return (\n            <div className={\"loginButton\"}>\n                <img src={logo} height={400}/>\n                <p>Welcome to SMARTron, please login with your LakerNet account</p>\n                <GoogleLogin\n                    clientId=\"121480712018-0f6fb2fh7kbms55bno97g3hiju99n8oo.apps.googleusercontent.com\"\n                    buttonText=\"Login with your LakerNet ID\"\n                    onFailure={this.responseGoogleFail}\n                    onSuccess={this.responseGoogleSucc}\n                    className={\"button\"}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport '../css/answerkey.css';\nimport Header from '../components/Header';\nclass AnswerKey extends Component{\nconstructor(){\n  super();\n  this.state = {\n    answerKeys: [],\n    keyOptions: [\"A\", \"B\", \"C\", \"D\", \"E\"],\n    chkbox: false,\n    updateAnswerKey: [],\n    copyOfAnswerKey: [],\n    makeCopy: true,\n    examList:[],\n    loginName:\"\",\n    email:\"\"\n  };\n  this.handleClick = this.handleClick.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.copyAnswerKey = this.copyAnswerKey.bind(this);\n  this.postAnswerKey = this.postAnswerKey.bind(this);\n}\n\ncomponentDidMount(){\n  fetch('http://localhost:8080/SMARTron/smartron/answerkey')\n  .then(response => response.json())\n  .then(result => {\n    const keys = result.map(item => {\n      return item;\n    })\n    this.setState({\n      answerKeys: keys,\n    })\n  });\n}\n\ncopyAnswerKey(){\n  let dupeAnswerKey = JSON.parse(JSON.stringify(this.state.answerKeys));\n  this.setState({\n    makeCopy:false,\n    copyOfAnswerKey:dupeAnswerKey\n  });\n}\n\nhandleClick(item, key){\n  if(this.state.makeCopy){\n    this.copyAnswerKey();\n  }\n  var index = item.answerKey.indexOf(key);\n  item.answerKey = [];\n  item.answerKey.push(key);\n//    if(item.answerKey.includes(key)){\n//      item.answerKey.splice(index,1);\n//    }else{\n//      item.answerKey.push(key);\n//    }\n    console.log();\n  if(this.state.updateAnswerKey.length === 0){\n    this.state.updateAnswerKey.push(item);\n  }\n\n  let updateList = this.state.updateAnswerKey;\n  updateList = updateList.filter(function( obj ){\n  return obj.questionId !== item.questionId});\n\n  let anserKeyObj = this.state.copyOfAnswerKey\n    .find(obj => obj.questionId === item.questionId);\n    item.answerKey.sort();\n\n  if(JSON.stringify(item) !== JSON.stringify(anserKeyObj)){\n    updateList.push(item);\n  }\n  this.setState({\n    updateAnswerKey:updateList\n  });\n}\n\nhandleSubmit(e){\n  this.props.history.push({pathname:\"/home\", state:{loginName:this.props.location.state.loginName, email:this.props.location.state.email,exams:this.props.location.state.exams}});\n  console.log(\"handle on submit here\")\n  console.log(this.state.copyOfAnswerKey);\n  console.log(this.state.updateAnswerKey);\n  this.postAnswerKey();\n}\n\npostAnswerKey(){\nvar data = JSON.stringify(this.state.answerKeys);\nconsole.log(data);\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = false;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === 4) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"http://localhost:8080/SMARTron/smartron/updateAnswerKey\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\nxhr.send(data);\n}\n\n  render(){\n    return (\n      <div>\n        <div>\n        </div>\n      <div align = \"right\">\n          <h1 className = \"answerKeyTitle\" align = \"center\">Answer Key</h1>\n          <h1 className = \"examName\" align = \"center\">{this.props.location.state.text}</h1>\n            <div className = \"items\">\n              {this.state.answerKeys.map( item => (\n                <div align = \"center\" className ={item.answerKey.length !== 0? \"item\": \"itemEmpty\"}>\n                  <div key ={item.questionId}>\n                    <div className=\"keyBox\">\n                      <span className=\"questionId\">\n                        {item.questionId}\n                      </span>\n                        {this.state.keyOptions.map(k =>(\n                          <span>\n                            <input\n                              type=\"checkbox\"\n                              value={item.questionId}\n                              id ={item.questionId+k}\n                              name=\"\"\n                              defaultChecked={item.answerKey.includes(k) ? true : false}\n                              onClick={() => this.handleClick(item, k)}/>\n                              <label htmlFor={item.questionId+k}>{k}</label>\n                            </span>\n                          ))}\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n              <button className= \"float\"\n                     onClick={() => this.handleSubmit()}>Submit</button>\n            </div>\n          <Header email={this.props.location.state.email}/>\n\n      </div>\n\n          );\n        }\n}\nexport default AnswerKey\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from './Home';\nimport Results from \"./ResultsPage/Results\";\nimport Login from \"./Login\";\nimport AnswerKey from \"./AnswerKey\";\n\nclass Router extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div style={{ height: \"100%\" }}>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route path=\"/home\" component={Home} />\n                    <Route exact path=\"/results\" component={Results} />\n                    <Route exact path=\"/answerKey\" component={AnswerKey}/>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default Router;\n","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Router from '../components/Router'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            loginName:\"hey\"\n        }\n    }\n\n\n    render() {\n        return (\n            <Router/>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}